version: '3.5'

x-access-from-traefik: &access-from-traefik
  traefik.enable: True
  traefik.docker.network: cloud_private

x-log-rotation: &log-rotation
  options:
    max-size: "200k"
    max-file: "3"

x-lmeet-environment: &lmeet-environment
  PYTHONUNBUFFERED: 1
  SECRET_KEY: 4oxkywz8i547jt6xk38gc4ifd5khbn3ueat2z8
  DB_HOST: lmeet-db
  DB_NAME: lmeet_db
  DB_USER: lmeet_user
  DB_PASSWORD: tridect

x-nginx-common: &nginx-common
  image: nginx:1.15
  volumes:
    - $PWD/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    - $PWD/docker/nginx/.htpasswd:/etc/nginx/.htpasswd
    - $PWD/docker/nginx/website.template:/etc/nginx/website.template
  command: /bin/bash -c "envsubst < /etc/nginx/website.template > /etc/nginx/conf.d/website.conf && exec nginx -g 'daemon off;'"

services:
  # api_gw:
  #   image: traefik:v1.7.16
  #   networks:
  #     - cloud_private
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #     - "443:443"
  #   logging:
  #     <<: *log-rotation

  cad-db:
    image: mysql:5.7
    volumes:
      - cad-db-volume:/var/lib/mysql
    networks:
      - cad_net
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    logging:
      <<: *log-rotation

  cad-wp:
    depends_on:
      - cad-db
    image: wordpress:latest
    networks:
      - cloud_private
      - cad_net
    ports:
      - "80:80"
      - "443:443"
    restart: always
    environment:
      WORDPRESS_DB_HOST: cad-db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    labels:
      <<: *access-from-traefik
      traefik.authenticated.frontend.rule: "PathPrefix: /"
    logging:
      <<: *log-rotation

  # lmeet-nginx:
  #   <<: *nginx-common
  #   ports:
  #     - 80:80
  #   networks:
  #     - cloud_private
  #     - lmeet-net
  #   depends_on:
  #     - letsmeet-app
  #   restart: on-failure
  #   environment:
  #     - NGINX_SERVER_NAME=lmeet-nginx
  #     - WEBSITE_PROXY_NAME=letsmeet-app
  #     - WEBSITE_PROXY_PORT=8000
  #   labels:
  #     <<: *access-from-traefik
  #     traefik.authenticated.frontend.rule: "PathPrefix: /lmeet"
  #   logging:
  #     <<: *log-rotation

  # lmeet-db:
  #   # https://hub.docker.com/r/mdillon/postgis/
  #   image: mdillon/postgis
  #   ports:
  #     - "8088:5432"
  #   volumes:
  #     - lmeet-db-volume:/var/lib/postgresql/data
  #   networks:
  #     - lmeet-net
  #   restart: on-failure
  #   environment:
  #     POSTGRES_USER: lmeet_user
  #     POSTGRES_PASSWORD: tridect
  #     POSTGRES_DB: lmeet_db
  #   logging:
  #     <<: *log-rotation

  # letsmeet-migrations:
  #   image: registry.gitlab.com/kancom/letsmeet:latest
  #   networks:
  #     - lmeet-net
  #   depends_on:
  #     - lmeet-db
  #   restart: on-failure
  #   environment:
  #     <<: *lmeet-environment
  #     DJANGO_SETTINGS_MODULE: "letsmeet.settings.lmeet_dev"
  #   command:
  #     python
  #       manage.py
  #       migrate
  #       --noinput

  # letsmeet-app:
  #   image: registry.gitlab.com/kancom/letsmeet:latest
  #   ports:
  #     - 8188:80
  #   depends_on:
  #     - lmeet-db
  #   networks:
  #     - lmeet-net
  #   restart: on-failure
  #   environment:
  #     <<: *lmeet-environment
  #     PYTHONUNBUFFERED: 1
  #     ALLOWED_HOSTS: 'lmeet-nginx'
  #     DJANGO_SETTINGS_MODULE: "letsmeet.settings.lmeet_dev"
  #   command:
  #     gunicorn
  #       --workers 2
  #       --threads 10
  #       --bind 0.0.0.0:8000
  #       --timeout 60
  #       --access-logfile -
  #       letsmeet.wsgi:application
  #   logging:
  #     <<: *log-rotation

  # test:
  #   image: registry.gitlab.com/kancom/letsmeet:latest
  #   command: python manage.py test
  #   restart: "no"


volumes:
  lmeet-db-volume:
  cad-db-volume:

networks:
  lmeet-net:
  cad_net:
  cloud_private:
